"""
PROYECTO SMVA EN PYTHON

EL ALCANCE DEL PROYECTO AUN SE ESTA EVALUANDO PERO LA IDEA INICIAL ES INTENTAR REPLICAR EL FUNCIONAMIENTO QUE EXISTE EN EL CODIGO DE LABVIEW Y PODER OBTENER MEJORAS A LARGO PLAZO

SE DIVIDIRA EN DIFERENTES TOPICOS: INTERFAZ GRAFICA, FUNCIONES, INSTRUMENTOS, BASE DE DATOS Y EXPORTACION. LUEGO ES ESENCIAL AGREGARLE UN SISTEMA DE GESTION DE LOS DATOS PARA ENTRENAR UNA IA
(EL "○" SE LOGRA ALT+9 AUNQUE PAREZCA UNA "O MINUSCULA" ES UN SEPARADOR)
INTERFAZ GRAFICA: UI O GUI:
    ○ PANTALLA DE LOG-IN ✓
        ○ PERMITE ACCEDER A PARTIR DE LOS USUARIOS YA CREADOS ✓
    ○ PANTALLA PRINCIPAL ✓
        ○ TOMAR LOS EQUIPOS QUE SE ENCUENTRAN LOCAL PARA AUMENTAR LA VELOCIDAD ✓
        ○ POSIBILIDAD DE ACTUALIZAR LOS EQUIPOS LOCALES ✓
        ○ FILTRAR LOS EQUIPOS POR NOMBRE ✓
        ○ FILTRAR LOS EQUIPOS POR VIGENTE NO VIGENTE ✓
        ○ CONEXION CON VENTANA PARA CREACION Y EDICCION DE PROTOCOLOS X
        ○ VER PROTOCOLOS EJECUTADOS X
        ○ CREACION DE NUEVOS USUARIOS X
        ○ SELECCION DE PROTOCOLO, YA SEA FILTRADO O NO, PARA EJECUCION ✓
    ○ PANTALLA PARA SELECCION DE CONFIGURACION ✓
        ○ MOSTRAR CONFIGURACION CREADAS ✓
        ○ PERMITIR LA CREACION DE NUEVAS CONFIGURACIONS X
        ○ PERMITIR ELIMINAR CONFIGURACIONES X
    ○ PANTALLA SELECCION NUMERO DE SERIE ✓
        ○ PERMITIR SELECCIONAR NUMERO DE SERIE YA EXISTENTE ✓
        ○ PERMITIR INGRESAR NUEVO NUMERO DE SERIE ✓
    ○ PANTALLA EJECUCION DE PROTOCOLO ✓
        ○ VISOR DE BLOQUES DE PROTOCOLO ✓
            ○ SE COMPLETE DE FORMA DINAMICA ✓
            ○ SE COLOREA DE MANERA DINAMICA ✓
            ○ CONTADOR DE BLOQUE ✓
        ○ VISOR DE PASOS EN EJECUCION ✓
            ○ SE COMPLETA DE FORMA DINAMICA ✓
            ○ SE COLOREA DE MANERA DINAMICA ✓
            ○ CONTADOR DE PROGRESO X
            ○ BLOQUE ESTADISTICO ✓
            ○ BOTON DE ABORTAR ✓
            ○ BOTON DE DETENER EJECUCION X
            ○ BOTON DE CONTINUAR EJECUCION X
            ○ BOTON EXPORTAR X
            ○ BOTON REPORTE DE ERRORES X
        ○ INGRESO MANUAL TEXTO ✓
            ○ VISOR DE INFORMACION TEXTO ✓
            ○ BOTON AUTO OK ✓
            ○ COMPLETAR RESPUESTA ✓
        ○ INGRESO MANUAL NUMERICO ✓
            ○ VISOR DE INFORMACION TEXTO ✓
            ○ VISOR DE RANGOS ✓
            ○ PERMITIR COMPLETAR ✓
        ○ PANTALLA DE EJECUCION MANUAL ✓ ------> ESENCIAL
            ○ BOTON DE SALTO ✓ ----> ESENCIAL
            ○ BOTON AUTOMATICO/MANUAL ✓
            ○ BOTON AVANZAR ✓

○ BASE DE DATOS:
    ○ ACCEDER A LOS USUARIOS ✓
        ○ CREAR UNA LISTA LOCAL PARA AUMENTAR LA VELOCIDAD ✓
        ○ CREAR NUEVOS USUARIOS X
        ○ PERMISOS X ----> :IMPORTANTE:
    ○ ACCEDER A LOS PROTOCOLOS MODELOS ✓
        ○ CREAR UN DICCIONARIO CON TODOS LOS PROTOCOLOS FORMATO JSON PARA ACCEDER DE MANERA INSTANTENEA ✓
            ○ PODER ACTUALIZAR EL DICCIONARIO SIEMPRE QUE SEA NECESARRIO ✓
    ○ ACTUALIZAR DATOS EN EJECUCION ✓
        ○ COPIA Y ACTUALIZA LOS DATOS DE PASOS DE PROTOCOLO ✓
        ○ SUBIR PROTOCOLO CUANDO REALIZA ALGUNA PAUSA, ABORTADO O FINALIZADO X

○ INSTRUMENTOS MIGRADOS:
    ○ TORRE DE RELE ✓
    ○ SIMULADOR DE TEMPERATURA CON TORRE RELE ✓
    ○ MULTIMETROS ✓
    ○ ESA620 ✓
    ○ FUENTE PROGRAMABLE ✓
    ○ CARGA ELECTRICA PROGRAMABLE ✓
    ○ IMPULSE 7000 ✓ (MUY POCAS FUNCIONES)
    ○ PROSIM 8 X
    ○ MEDSIM 300 X
    ○ IMPEDANCIOMETRO X
    ○ ALARMAS MULTIPAR/PM9000 ✓
    ○ OSCILOSCOPIOS ✓
    ○ MEDICIONES MULTIPARES/PM9000 X
    .
    .
    .
    ○ ROBOT SZGH T750 X
    ○ ROBOT PM9000 ✓
"""

import sys
from PyQt5.QtWidgets import QApplication
from GUI.main_window import MainWindow
from GUI.log import LogWindow
from CONTROLADORES.BBDD import SMVA_DB

def main():
    __VERSION__ = "0.9.4"
    database = SMVA_DB() #Cargo la base de datos
    app = QApplication(sys.argv)

    # Crear la ventana de login
    login_window = LogWindow(database=database)
    login_window.show()

    # Crear la ventana principal pero no mostrarla aún
    main_window = MainWindow(database=database,version=__VERSION__)

    # Conectar el login exitoso con la apertura de la ventana principal
    def open_main_window():
        login_window.close()  # Cerrar la ventana de login
        
        main_window.show()

    login_window.login_successful.connect(open_main_window)  # Conectar la señal

    sys.exit(app.exec_())

if __name__ == "__main__":
    main()
